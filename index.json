[{"sid":"C308789E29F9C5FD.html#6C46FDC17AE1EB99","name":"borrow_err","decl":"constexpr auto borrow_err() -> reglisse::result::error_type & &","type":0},{"sid":"99930D0354049703.html#273DF804AD818660","name":"value","decl":"constexpr auto value() const -> const reglisse::some::value_type & & noexcept","type":0},{"sid":"C308789E29F9C5FD.html#479D4837BFEDFA2D","name":"~result<ValueType, ErrorType>","decl":"constexpr ~result<ValueType, ErrorType>()","type":0},{"sid":"C308789E29F9C5FD.html#A6B94C8AE8A1E157","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(const result<ValueType, ErrorType> & other)","type":0},{"sid":"193B1F8FA0DF8A83.html#54CD9AEBA5C46BAC","name":"transform_or_else","decl":"template <class Fun, class Def>constexpr auto transform_or_else(Fun && some_fun, Def && none_fun) const -> std::invoke_result_t<Def> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#52E7C0B9A09BCD07","name":"flat_transform_right","decl":"template <class Fun>constexpr auto flat_transform_right(Fun && right_fun) const -> std::invoke_result_t<Fun, right_type> &&","type":0},{"sid":"C308789E29F9C5FD.html#306AAC622279DF51","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>()","type":0},{"sid":"C308789E29F9C5FD.html#1BA9EEDB15746B13","name":"take","decl":"constexpr auto take() const -> reglisse::result::value_type &&","type":0},{"sid":"8F1DEC556E2069B0.html#9237130274CF709F","name":"value","decl":"constexpr auto value() -> reglisse::ok::value_type && noexcept","type":0},{"sid":"C308789E29F9C5FD.html#99BCBED4FD1DA6B1","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(ok<reglisse::result::value_type> && value)","type":0},{"sid":"C0114D6317798D28","name":"handle_invalid_left_either_access","decl":"inline void handle_invalid_left_either_access(bool check)","type":1},{"sid":"C308789E29F9C5FD.html#2CFBD197A71E20DE","name":"take_or","decl":"template <class U>constexpr auto take_or(U && other) -> reglisse::result::value_type &&","type":0},{"sid":"99930D0354049703.html#82F86E31EA31CDE9","name":"some<T>","decl":"constexpr some<T>(reglisse::some::value_type && value)","type":0},{"sid":"39CEE426CDCC0BB3.html#C2F421FA97FC77ED","name":"value","decl":"constexpr auto value() const -> const reglisse::err::value_type & & noexcept","type":0},{"sid":"39CEE426CDCC0BB3.html#E8CFDF99C40BAFEA","name":"value","decl":"constexpr auto value() const -> const reglisse::err::value_type && noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#31AA3B61847DFDB2","name":"or_else","decl":"template <class Fun>constexpr auto or_else(Fun && none_fun) const -> maybe<reglisse::maybe::value_type> &&","type":0},{"sid":"C308789E29F9C5FD.html#4F764C5DAA33A7EF","name":"or_else","decl":"template <class Fun>constexpr auto or_else(Fun && none_fun) -> std::invoke_result_t<Fun, error_type> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#7D1F10B958628EB5","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(either<LeftType, RightType> && other) noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#C2367BA8ACEF62FA","name":"transform","decl":"template <class Fun>constexpr auto transform(Fun && some_fun) const -> maybe<std::invoke_result_t<Fun, value_type &&>> &&","type":0},{"sid":"58D3981D68640278.html#8EAC6088525FD218","name":"what","decl":"auto what() const -> const char * noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#C36909B2C35C1A44","name":"borrow_right","decl":"constexpr auto borrow_right() const -> const reglisse::either::right_type & & noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#2CF3777B75348DAD","name":"borrow","decl":"constexpr auto borrow() -> reglisse::maybe::value_type & &","type":0},{"sid":"C308789E29F9C5FD.html#C903FA22FFD67273","name":"take_err","decl":"constexpr auto take_err() -> reglisse::result::error_type &&","type":0},{"sid":"ACD152E9E6EB2DE4.html#4A767985BF490D06","name":"value","decl":"constexpr auto value() const -> const reglisse::left::value_type & & noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#3D76D0A713041CCD","name":"transform_or","decl":"template <class Fun, class Other>constexpr auto transform_or(Fun && some_fun, Other && other) -> std::common_type_t<std::invoke_result_t<Fun, value_type &&>, Other> &&","type":0},{"sid":"AD1BDA2ABC758495.html#8BABDF5C969E0D19","name":"value","decl":"constexpr auto value() -> reglisse::right::value_type & & noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#01913173BE06BB4D","name":"borrow","decl":"constexpr auto borrow() const -> const reglisse::maybe::value_type & &","type":0},{"sid":"C308789E29F9C5FD.html#67754A6BA212BCFD","name":"and_then","decl":"template <class Fun>constexpr auto and_then(Fun && some_fun) -> std::invoke_result_t<Fun, value_type> &&","type":0},{"sid":"8F1DEC556E2069B0.html#2A7A3202214797A9","name":"value","decl":"constexpr auto value() const -> const reglisse::ok::value_type & & noexcept","type":0},{"sid":"C308789E29F9C5FD.html#36BA521973356C3A","name":"take","decl":"constexpr auto take() -> reglisse::result::value_type &&","type":0},{"sid":"193B1F8FA0DF8A83.html#6CB8BB311763D14A","name":"maybe<T>","decl":"constexpr maybe<T>(some<T> && val)","type":0},{"sid":"193B1F8FA0DF8A83.html#B14C11ED89D80C15","name":"maybe<T>","decl":"constexpr maybe<T>(const maybe<T> & other)","type":0},{"sid":"193B1F8FA0DF8A83.html#17F520BC4885A9C2","name":"and_then","decl":"template <class Fun>constexpr auto and_then(Fun && some_fun) const -> std::invoke_result_t<Fun, value_type> &&","type":0},{"sid":"193B1F8FA0DF8A83.html#480A20D3AE4F27C8","name":"maybe<T>","decl":"constexpr maybe<T>(maybe<T> && other) noexcept","type":0},{"sid":"99930D0354049703.html#5AAED2AF5CEE7569","name":"value","decl":"constexpr auto value() const -> const reglisse::some::value_type && noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#8FD84FE56644CD95","name":"take_or","decl":"template <class U>constexpr auto take_or(U && or_val) const -> reglisse::maybe::value_type &&","type":0},{"sid":"C308789E29F9C5FD.html#2B1A6C94EADBEDFE","name":"join","decl":"template <class inner_value_ = reglisse::result::value_type, class inner_error_ = reglisse::result::error_type>constexpr auto join() -> std::common_type_t<inner_value_, inner_error_> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#DBAC63DE9B94079F","name":"take_left","decl":"constexpr auto take_left() const -> const reglisse::either::left_type && noexcept","type":0},{"sid":"FA13F198B4EF86E5","name":"handle_invalid_right_either_access","decl":"inline void handle_invalid_right_either_access(bool check)","type":1},{"sid":"193B1F8FA0DF8A83.html#8C7E2C5AA054CE04","name":"transform_or_else","decl":"template <class Fun, class Def>constexpr auto transform_or_else(Fun && some_fun, Def && none_fun) -> std::invoke_result_t<Def> &&","type":0},{"sid":"193B1F8FA0DF8A83.html#52B4D498BFB424B2","name":"maybe<T>","decl":"constexpr maybe<T>(reglisse::none_t) noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#47D1C7EFB9BBB20E","name":"is_left","decl":"constexpr auto is_left() const -> bool noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#D4D64E519167424A","name":"is_none","decl":"constexpr auto is_none() const -> bool noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#823D65162DE2F6DF","name":"operator bool","decl":"constexpr bool operator bool() const noexcept","type":0},{"sid":"C308789E29F9C5FD.html#7AA10E543B93DFEF","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(result<ValueType, ErrorType> && other) noexcept","type":0},{"sid":"C308789E29F9C5FD.html#95A5E482B09FF15B","name":"borrow_err","decl":"constexpr auto borrow_err() const -> const reglisse::result::error_type & &","type":0},{"sid":"C308789E29F9C5FD.html#5FE514E33519B67C","name":"and_then","decl":"template <class Fun>constexpr auto and_then(Fun && some_fun) const -> std::invoke_result_t<Fun, value_type> &&","type":0},{"sid":"101DFC2049C1A477","name":"handle_invalid_maybe_access","decl":"inline void handle_invalid_maybe_access(bool check)","type":1},{"sid":"AD1BDA2ABC758495.html#2BEC977B08688901","name":"value","decl":"constexpr auto value() const -> const reglisse::right::value_type & & noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#B8DA0EAF0114E151","name":"take_right","decl":"constexpr auto take_right() const -> const reglisse::either::right_type && noexcept","type":0},{"sid":"C308789E29F9C5FD.html#2620AAB7DDC63A78","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(err<reglisse::result::error_type> && error)","type":0},{"sid":"C308789E29F9C5FD.html#464AEF07E1212845","name":"transform","decl":"template <class Fun>constexpr auto transform(Fun && fun) const -> result<std::invoke_result_t<Fun, value_type &&>, reglisse::result::error_type> &&","type":0},{"sid":"7DADAE645693BD18","name":"handle_invalid_error_result_access","decl":"inline void handle_invalid_error_result_access(bool check)","type":1},{"sid":"C308789E29F9C5FD.html#03046769BDB854C8","name":"take_or","decl":"template <class U>constexpr auto take_or(U && other) const -> reglisse::result::value_type &&","type":0},{"sid":"193B1F8FA0DF8A83.html#3604B3E91D43A125","name":"take_or","decl":"template <class U>constexpr auto take_or(U && or_val) -> reglisse::maybe::value_type &&","type":0},{"sid":"193B1F8FA0DF8A83.html#7763FCEB761D4D1C","name":"or_else","decl":"template <class Fun>constexpr auto or_else(Fun && none_fun) -> maybe<reglisse::maybe::value_type> &&","type":0},{"sid":"193B1F8FA0DF8A83.html#D8AA3A61053F30B3","name":"take","decl":"constexpr auto take() -> reglisse::maybe::value_type &&","type":0},{"sid":"8F1DEC556E2069B0.html#1252B9B18DA640A5","name":"ok<T>","decl":"constexpr ok<T>(reglisse::ok::value_type && value)","type":0},{"sid":"193B1F8FA0DF8A83.html#C99F1982AE47A30C","name":"transform","decl":"template <class Fun>constexpr auto transform(Fun && some_fun) -> maybe<std::invoke_result_t<Fun, value_type &&>> &&","type":0},{"sid":"193B1F8FA0DF8A83.html#98B9E5712B89CB53","name":"maybe<T>","decl":"constexpr maybe<T>() noexcept","type":0},{"sid":"AD1BDA2ABC758495.html#23EE3BBA42F6C55C","name":"right<T>","decl":"constexpr right<T>(reglisse::right::value_type && value)","type":0},{"sid":"39CEE426CDCC0BB3.html#5484726C5A4374CD","name":"value","decl":"constexpr auto value() -> reglisse::err::value_type && noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#1D417E21957A439D","name":"and_then","decl":"template <class Fun>constexpr auto and_then(Fun && some_fun) -> std::invoke_result_t<Fun, value_type> &&","type":0},{"sid":"C308789E29F9C5FD.html#1D40E5BA8D0BCC84","name":"take_err","decl":"constexpr auto take_err() const -> reglisse::result::error_type &&","type":0},{"sid":"C308789E29F9C5FD.html#B3145FB0789D2371","name":"take_err_or","decl":"template <class U>constexpr auto take_err_or(U && other) const -> reglisse::result::error_type &&","type":0},{"sid":"193B1F8FA0DF8A83.html#B989C02561F6992F","name":"is_some","decl":"constexpr auto is_some() const -> bool noexcept","type":0},{"sid":"C308789E29F9C5FD.html#42472D8D4B714A20","name":"or_else","decl":"template <class Fun>constexpr auto or_else(Fun && none_fun) const -> std::invoke_result_t<Fun, error_type> &&","type":0},{"sid":"193B1F8FA0DF8A83.html#F125ED7F35CB7C80","name":"~maybe<T>","decl":"constexpr ~maybe<T>()","type":0},{"sid":"58D3981D68640278.html#27EACEAB79AD47D5","name":"invalid_access_exception","decl":"invalid_access_exception(std::string msg)","type":0},{"sid":"193B1F8FA0DF8A83.html#4B58B6F6391051A3","name":"reset","decl":"constexpr void reset()","type":0},{"sid":"C308789E29F9C5FD.html#09275757F1D70C7E","name":"take_err_or","decl":"template <class U>constexpr auto take_err_or(U && other) -> reglisse::result::error_type &&","type":0},{"sid":"ACD152E9E6EB2DE4.html#2ECC1E659A267CB7","name":"value","decl":"constexpr auto value() -> reglisse::left::value_type && noexcept","type":0},{"sid":"C308789E29F9C5FD.html#2FA4E8D37295D6AF","name":"is_ok","decl":"constexpr auto is_ok() const -> bool noexcept","type":0},{"sid":"193B1F8FA0DF8A83.html#EBF0BAC71E018AAD","name":"take","decl":"constexpr auto take() const -> const reglisse::maybe::value_type &&","type":0},{"sid":"C308789E29F9C5FD.html#7E96A77960974037","name":"operator bool","decl":"constexpr bool operator bool() const noexcept","type":0},{"sid":"C308789E29F9C5FD.html#8BA927479A3CD765","name":"transform","decl":"template <class Fun>constexpr auto transform(Fun && fun) -> result<std::invoke_result_t<Fun, value_type &&>, reglisse::result::error_type> &&","type":0},{"sid":"C308789E29F9C5FD.html#B83EEB4520B6095E","name":"borrow","decl":"constexpr auto borrow() -> reglisse::result::value_type & &","type":0},{"sid":"C308789E29F9C5FD.html#2788CBB68BE3658D","name":"transform_err","decl":"template <class Fun>constexpr auto transform_err(Fun && err_fun) const -> result<reglisse::result::value_type, std::invoke_result_t<Fun, error_type>> &&","type":0},{"sid":"C308789E29F9C5FD.html#08FFC9E2B42879B4","name":"transform_err","decl":"template <class Fun>constexpr auto transform_err(Fun && err_fun) -> result<reglisse::result::value_type, std::invoke_result_t<Fun, error_type>> &&","type":0},{"sid":"8F1DEC556E2069B0.html#894A9936DE9C7241","name":"value","decl":"constexpr auto value() -> reglisse::ok::value_type & & noexcept","type":0},{"sid":"99930D0354049703.html#99E0D2BEFC8FBEE4","name":"value","decl":"constexpr auto value() -> reglisse::some::value_type & & noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#37AD4EFDD2CCB280","name":"transform_right","decl":"template <class Fun>constexpr auto transform_right(Fun && right_fun) -> either<reglisse::either::left_type, std::invoke_result_t<Fun, right_type>> &&","type":0},{"sid":"C308789E29F9C5FD.html#F30FF1E395A9A87A","name":"join","decl":"template <class OkFun, class ErrFun>constexpr auto join(OkFun && ok_fun, ErrFun && err_fun) const -> join_result<OkFun, ErrFun> &&","type":0},{"sid":"ACD152E9E6EB2DE4.html#6155FD25FE37C839","name":"value","decl":"constexpr auto value() -> reglisse::left::value_type & & noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#4615194DCE4ACB59","name":"is_right","decl":"constexpr auto is_right() const -> bool noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#3103E97F67FFD371","name":"transform_right","decl":"template <class Fun>constexpr auto transform_right(Fun && right_fun) const -> either<reglisse::either::left_type, std::invoke_result_t<Fun, const right_type>> &&","type":0},{"sid":"ACD152E9E6EB2DE4.html#10BF262DD9736D3C","name":"left<T>","decl":"constexpr left<T>(reglisse::left::value_type && value)","type":0},{"sid":"AD1BDA2ABC758495.html#77D16484585B9739","name":"value","decl":"constexpr auto value() const -> const reglisse::right::value_type && noexcept","type":0},{"sid":"C308789E29F9C5FD.html#DF358ADE9019F28D","name":"join","decl":"template <class inner_value_ = reglisse::result::value_type, class inner_error_ = reglisse::result::error_type>constexpr auto join() const -> std::common_type_t<inner_value_, inner_error_> &&","type":0},{"sid":"193B1F8FA0DF8A83.html#FD000EA15C737FA1","name":"swap","decl":"constexpr void swap(maybe<T> & other)","type":0},{"sid":"6D09DB3FE5E4DCAB","name":"handle_invalid_value_result_access","decl":"inline void handle_invalid_value_result_access(bool check)","type":1},{"sid":"AD1BDA2ABC758495.html#CFECF46C2E869C7E","name":"value","decl":"constexpr auto value() -> reglisse::right::value_type && noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#D308368927DBBCD6","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(left<reglisse::either::left_type> && left_val)","type":0},{"sid":"C308789E29F9C5FD.html#86F4C9822C81C46E","name":"join","decl":"template <class OkFun, class ErrFun>constexpr auto join(OkFun && ok_fun, ErrFun && err_fun) -> join_result<OkFun, ErrFun> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#E703D25947A6D9FC","name":"borrow_left","decl":"constexpr auto borrow_left() -> reglisse::either::left_type & & noexcept","type":0},{"sid":"39CEE426CDCC0BB3.html#979CF6691F43CF76","name":"err<T>","decl":"constexpr err<T>(reglisse::err::value_type && value)","type":0},{"sid":"193B1F8FA0DF8A83.html#8C7CFF3D855B7CBB","name":"transform_or","decl":"template <class Fun, class Other>constexpr auto transform_or(Fun && some_fun, Other && other) const -> std::common_type_t<std::invoke_result_t<Fun, value_type &&>, Other> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#A29172A5E7F6EBFE","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(right<reglisse::either::right_type> && right_val)","type":0},{"sid":"BC14E11EB4F0D8A4.html#4C02C7313ABA7AED","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>()","type":0},{"sid":"BC14E11EB4F0D8A4.html#963CCA401BF0EC0D","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(const either<LeftType, RightType> & other)","type":0},{"sid":"BC14E11EB4F0D8A4.html#00D63708B53D0C12","name":"~either<LeftType, RightType>","decl":"constexpr ~either<LeftType, RightType>()","type":0},{"sid":"BC14E11EB4F0D8A4.html#61D2665E4D99735E","name":"borrow_left","decl":"constexpr auto borrow_left() const -> const reglisse::either::left_type & & noexcept","type":0},{"sid":"39CEE426CDCC0BB3.html#87408EF3B1248CE0","name":"value","decl":"constexpr auto value() -> reglisse::err::value_type & & noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#B8685AE0991074AC","name":"take_left","decl":"constexpr auto take_left() -> reglisse::either::left_type && noexcept","type":0},{"sid":"C308789E29F9C5FD.html#8C73CEDFB5049CB6","name":"borrow","decl":"constexpr auto borrow() const -> const reglisse::result::value_type & &","type":0},{"sid":"BC14E11EB4F0D8A4.html#DE5B804ED1BDE46E","name":"take_right","decl":"constexpr auto take_right() -> reglisse::either::right_type && noexcept","type":0},{"sid":"99930D0354049703.html#15884FA3357CA792","name":"value","decl":"constexpr auto value() -> reglisse::some::value_type && noexcept","type":0},{"sid":"2F5B6276BE3D3069","name":"try_wrap","decl":"template <class ErrType, class Fun, class... Args>constexpr auto try_wrap(Fun && fun, Args &&... args)","type":1},{"sid":"BC14E11EB4F0D8A4.html#9A8E9DD0030A9337","name":"borrow_right","decl":"constexpr auto borrow_right() -> reglisse::either::right_type & & noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#673BBE557B5C189E","name":"transform_left","decl":"template <class Fun>constexpr auto transform_left(Fun && left_fun) const -> either<std::invoke_result_t<Fun, const left_type>, reglisse::either::right_type> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#43C5A43D2EC5A008","name":"transform_left","decl":"template <class Fun>constexpr auto transform_left(Fun && left_fun) -> either<std::invoke_result_t<Fun, left_type>, reglisse::either::right_type> &&","type":0},{"sid":"ACD152E9E6EB2DE4.html#0BC762A08CE41981","name":"value","decl":"constexpr auto value() const -> const reglisse::left::value_type && noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#A4717CF42D47308A","name":"flat_transform_left","decl":"template <class Fun>constexpr auto flat_transform_left(Fun && left_fun) const -> std::invoke_result_t<Fun, left_type> &&","type":0},{"sid":"BC14E11EB4F0D8A4.html#8A6B685C40EFBF58","name":"flat_transform_left","decl":"template <class Fun>constexpr auto flat_transform_left(Fun && left_fun) -> std::invoke_result_t<Fun, left_type> &&","type":0},{"sid":"C308789E29F9C5FD.html#4590385B386762D7","name":"is_err","decl":"constexpr auto is_err() const -> bool noexcept","type":0},{"sid":"BC14E11EB4F0D8A4.html#4FE5DCE4C945C7BE","name":"flat_transform_right","decl":"template <class Fun>constexpr auto flat_transform_right(Fun && right_fun) -> std::invoke_result_t<Fun, right_type> &&","type":0},{"sid":"8F1DEC556E2069B0.html#65AF1DBF3D7491E9","name":"value","decl":"constexpr auto value() const -> const reglisse::ok::value_type && noexcept","type":0},{"sid":"BC14E11EB4F0D8A4","name":"either","decl":"template <class L, class R> class either","type":3},{"sid":"AD1BDA2ABC758495","name":"right","decl":"template <class T> class right","type":3},{"sid":"58D3981D68640278","name":"invalid_access_exception","decl":"class invalid_access_exception : public std::exception","type":3},{"sid":"ACD152E9E6EB2DE4","name":"left","decl":"template <class T> class left","type":3},{"sid":"C308789E29F9C5FD","name":"result","decl":"template <class ValueType, class ErrorType> class result","type":3},{"sid":"8F1DEC556E2069B0","name":"ok","decl":"template <class T> class ok","type":3},{"sid":"193B1F8FA0DF8A83","name":"maybe","decl":"template <typename T> class maybe","type":3},{"sid":"39CEE426CDCC0BB3","name":"err","decl":"template <class T> class err","type":3},{"sid":"99930D0354049703","name":"some","decl":"template <class T> class some","type":3},{"sid":"8C0678197A914345","name":"none_t","decl":"struct none_t","type":2}]