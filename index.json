[{"sid":"AFF5428B80EAC1D1.html#EAB50DA8E35E4ADB","name":"borrow_right","decl":"constexpr auto borrow_right() const & noexcept -> const reglisse::either::right_type &","type":0},{"sid":"AFF5428B80EAC1D1.html#2EF37B48C46527FB","name":"take_left","decl":"constexpr auto take_left() && noexcept -> reglisse::either::left_type","type":0},{"sid":"0BE2AFE901D0D3BE.html#2FC07776F4D4984A","name":"value","decl":"constexpr auto value() & noexcept -> reglisse::err::value_type &","type":0},{"sid":"0484BCD0DC59A433.html#08FF24D985ECFEB6","name":"invalid_access_exception","decl":"invalid_access_exception(std::string msg)","type":0},{"sid":"5CCC61E92B5555F9.html#B8AEB60F8C1447ED","name":"pipe_closure<Func>","decl":"template <typename... Types>constexpr pipe_closure<Func>(Types &&... values)","type":0},{"sid":"7501B69C4B85CC35.html#BE223981C91854FE","name":"left<T>","decl":"constexpr left<T>(reglisse::left::value_type && value)","type":0},{"sid":"5CBE23CFDDCEF161.html#A4449EB03D7B3277","name":"maybe<T>","decl":"constexpr maybe<T>(const maybe<T> & other)","type":0},{"sid":"BB13AFB20A985980.html#C0C28216A3285E95","name":"take_or","decl":"template <class U>constexpr auto take_or(U && other) && -> reglisse::result::value_type","type":0},{"sid":"25ADDC38DAE22EB9","name":"handle_invalid_maybe_access","decl":"inline void handle_invalid_maybe_access(bool check)","type":1},{"sid":"B2E73C383AAAD635.html#D037A5738A4E6AE7","name":"take","decl":"constexpr auto take() const && noexcept -> const reglisse::some::value_type","type":0},{"sid":"5CBE23CFDDCEF161.html#BFBF404C4D8321AE","name":"take_or","decl":"template <class U>constexpr auto take_or(U && or_val) const && -> reglisse::maybe::value_type","type":0},{"sid":"AFF5428B80EAC1D1.html#4490BAAEB62E96F0","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(const either<LeftType, RightType> & other)","type":0},{"sid":"C9B92E868BB67730.html#DBB776547157C738","name":"forwarding_wrapper<Type>","decl":"template <class U>constexpr forwarding_wrapper<Type>(U && val)","type":0},{"sid":"5CBE23CFDDCEF161.html#DD971E01101032EE","name":"take","decl":"constexpr auto take() const && -> reglisse::maybe::value_type","type":0},{"sid":"AFF5428B80EAC1D1.html#8F103AF66CAB2D6A","name":"is_left","decl":"constexpr auto is_left() const noexcept -> bool","type":0},{"sid":"5FEB104378BC97C4","name":"try_wrap","decl":"template <class ErrType, class Fun, class... Args>constexpr auto try_wrap(Fun && fun, Args &&... args)","type":1},{"sid":"B2E73C383AAAD635.html#027D19FB6AE35CB7","name":"some<T>","decl":"constexpr some<T>(const reglisse::some::value_type & value)","type":0},{"sid":"7501B69C4B85CC35.html#281C2D0978085C7E","name":"borrow","decl":"constexpr auto borrow() & noexcept -> reglisse::left::value_type &","type":0},{"sid":"B2E73C383AAAD635.html#2DF7248766DFF82B","name":"borrow","decl":"constexpr auto borrow() const & noexcept -> const reglisse::some::value_type &","type":0},{"sid":"FA8E2EC3BE9245EB.html#896A5E7973561230","name":"right<T>","decl":"constexpr right<T>(const reglisse::right::value_type & value)","type":0},{"sid":"7501B69C4B85CC35.html#135A4D9A01A89A71","name":"take","decl":"constexpr auto take() && noexcept -> reglisse::left::value_type","type":0},{"sid":"5CBE23CFDDCEF161.html#F5A2D000BFB56654","name":"swap","decl":"constexpr void swap(maybe<T> & other)","type":0},{"sid":"7501B69C4B85CC35.html#0B08C5E1C7EFE54F","name":"take","decl":"constexpr auto take() const && noexcept -> const reglisse::left::value_type","type":0},{"sid":"7501B69C4B85CC35.html#34A66FE7C058E65B","name":"borrow","decl":"constexpr auto borrow() const & noexcept -> const reglisse::left::value_type &","type":0},{"sid":"FCA83F6ED7BB3852","name":"<deduction guide for err>","decl":"auto <deduction guide for err>(const char *) -> err<std::string>","type":1},{"sid":"7501B69C4B85CC35.html#44531816BFBB36B2","name":"left<T>","decl":"constexpr left<T>(const reglisse::left::value_type & value)","type":0},{"sid":"AFF5428B80EAC1D1.html#C2141CD0ABFB368A","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(either<LeftType, RightType> && other) noexcept","type":0},{"sid":"4A6CB6716EE08691.html#EC4D79CCB41E5F6C","name":"ok<T>","decl":"constexpr ok<T>(reglisse::ok::value_type && value)","type":0},{"sid":"BB13AFB20A985980.html#8364A3A4520C0604","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(const result<ValueType, ErrorType> & other)","type":0},{"sid":"5AA1E758901DB901","name":"handle_invalid_right_either_access","decl":"inline void handle_invalid_right_either_access(bool check)","type":1},{"sid":"AFF5428B80EAC1D1.html#360CECE75C08B372","name":"borrow_left","decl":"constexpr auto borrow_left() const & noexcept -> const reglisse::either::left_type &","type":0},{"sid":"5CBE23CFDDCEF161.html#C2BA63BB183CD720","name":"operator bool","decl":"constexpr bool operator bool() const noexcept","type":0},{"sid":"849A405FA47158A1","name":"make_pipe_closure","decl":"template <typename Func>constexpr auto make_pipe_closure(Func func)","type":1},{"sid":"AFF5428B80EAC1D1.html#26FEC7F2ECDEB50A","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>()","type":0},{"sid":"B2E73C383AAAD635.html#3970D769DFBC7D43","name":"borrow","decl":"constexpr auto borrow() & noexcept -> reglisse::some::value_type &","type":0},{"sid":"BB13AFB20A985980.html#4DC12EE9786630B4","name":"take_err","decl":"constexpr auto take_err() && -> reglisse::result::error_type","type":0},{"sid":"B2E73C383AAAD635.html#325A8143C9755237","name":"take","decl":"constexpr auto take() && noexcept -> reglisse::some::value_type","type":0},{"sid":"9204831BACECE212","name":"handle_invalid_left_either_access","decl":"inline void handle_invalid_left_either_access(bool check)","type":1},{"sid":"FA8E2EC3BE9245EB.html#0732485052C3621D","name":"take","decl":"constexpr auto take() const && noexcept -> const reglisse::right::value_type","type":0},{"sid":"5CBE23CFDDCEF161.html#74D515DA237DD601","name":"~maybe<T>","decl":"constexpr ~maybe<T>()","type":0},{"sid":"9CD13C36EEC94AEB","name":"<deduction guide for right>","decl":"auto <deduction guide for right>(const char *) -> right<std::string>","type":1},{"sid":"E684C7D78E26F84C","name":"<deduction guide for left>","decl":"auto <deduction guide for left>(const char *) -> left<std::string>","type":1},{"sid":"5D067FD52F8502AE","name":"<deduction guide for some>","decl":"auto <deduction guide for some>(const char *) -> some<std::string>","type":1},{"sid":"BB13AFB20A985980.html#791C54DDE88CD302","name":"borrow_err","decl":"constexpr auto borrow_err() & -> reglisse::result::error_type &","type":0},{"sid":"AFF5428B80EAC1D1.html#C42790583D33B7FB","name":"is_right","decl":"constexpr auto is_right() const noexcept -> bool","type":0},{"sid":"BB13AFB20A985980.html#54D8A2181FFF1518","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(result<ValueType, ErrorType> && other) noexcept","type":0},{"sid":"BB13AFB20A985980.html#8DD1B5B46E9B1E6D","name":"borrow_err","decl":"constexpr auto borrow_err() const & -> const reglisse::result::error_type &","type":0},{"sid":"FA8E2EC3BE9245EB.html#6721C63C9A2369A3","name":"borrow","decl":"constexpr auto borrow() & noexcept -> reglisse::right::value_type &","type":0},{"sid":"BB13AFB20A985980.html#0C770DB27DA2FB77","name":"take_err_or","decl":"template <class U>constexpr auto take_err_or(U && other) && -> reglisse::result::error_type","type":0},{"sid":"5CBE23CFDDCEF161.html#897E8F37577D40CD","name":"is_some","decl":"constexpr auto is_some() const noexcept -> bool","type":0},{"sid":"C2CBA73D3CA76EB4","name":"make_forwarding_wrapper","decl":"template <typename Type>constexpr auto make_forwarding_wrapper(Type && val)","type":1},{"sid":"AFF5428B80EAC1D1.html#C3C832DC8BDBA6F8","name":"~either<LeftType, RightType>","decl":"constexpr ~either<LeftType, RightType>()","type":0},{"sid":"AFF5428B80EAC1D1.html#62E251BC4893011C","name":"take_left","decl":"constexpr auto take_left() const && noexcept -> const reglisse::either::left_type","type":0},{"sid":"BB13AFB20A985980.html#8FED625427B9D655","name":"take","decl":"constexpr auto take() const && -> reglisse::result::value_type","type":0},{"sid":"5CBE23CFDDCEF161.html#5C15D1C3DA95653D","name":"maybe<T>","decl":"constexpr maybe<T>() noexcept","type":0},{"sid":"5CBE23CFDDCEF161.html#06BAB5CE4C1C60D2","name":"maybe<T>","decl":"constexpr maybe<T>(reglisse::none_t) noexcept","type":0},{"sid":"5CBE23CFDDCEF161.html#14E488A7E103948A","name":"maybe<T>","decl":"constexpr maybe<T>(some<T> && val)","type":0},{"sid":"FA8E2EC3BE9245EB.html#2A4126F942E4EA2F","name":"right<T>","decl":"constexpr right<T>(reglisse::right::value_type && value)","type":0},{"sid":"5CBE23CFDDCEF161.html#71583973B39BB980","name":"maybe<T>","decl":"constexpr maybe<T>(maybe<T> && other) noexcept","type":0},{"sid":"FA8E2EC3BE9245EB.html#ADDDC29E1C2E4FC2","name":"take","decl":"constexpr auto take() && noexcept -> reglisse::right::value_type","type":0},{"sid":"BB13AFB20A985980.html#06AF117534580465","name":"take_err_or","decl":"template <class U>constexpr auto take_err_or(U && other) const && -> reglisse::result::error_type","type":0},{"sid":"BB13AFB20A985980.html#6372778DB55C9CCE","name":"~result<ValueType, ErrorType>","decl":"constexpr ~result<ValueType, ErrorType>()","type":0},{"sid":"5CBE23CFDDCEF161.html#D18792E3C5652D84","name":"borrow","decl":"constexpr auto borrow() & -> reglisse::maybe::value_type &","type":0},{"sid":"BB13AFB20A985980.html#2147707413675DCE","name":"is_ok","decl":"constexpr auto is_ok() const noexcept -> bool","type":0},{"sid":"5CBE23CFDDCEF161.html#59668E975D421E93","name":"borrow","decl":"constexpr auto borrow() const & -> const reglisse::maybe::value_type &","type":0},{"sid":"0484BCD0DC59A433.html#773230E4A008C3BB","name":"what","decl":"auto what() const noexcept -> const char *","type":0},{"sid":"BB13AFB20A985980.html#4CDC72DF45F74C6E","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>()","type":0},{"sid":"5CBE23CFDDCEF161.html#2D350AB486456E9C","name":"take","decl":"constexpr auto take() && -> reglisse::maybe::value_type","type":0},{"sid":"5CBE23CFDDCEF161.html#9D7760A86C529CE6","name":"take_or","decl":"template <class U>constexpr auto take_or(U && or_val) && -> reglisse::maybe::value_type","type":0},{"sid":"5CBE23CFDDCEF161.html#FFA0E9E7A01693FC","name":"reset","decl":"constexpr void reset()","type":0},{"sid":"5CBE23CFDDCEF161.html#9805DEBF3E851756","name":"is_none","decl":"constexpr auto is_none() const noexcept -> bool","type":0},{"sid":"BB13AFB20A985980.html#431535F33287ABDD","name":"borrow","decl":"constexpr auto borrow() const & -> const reglisse::result::value_type &","type":0},{"sid":"4A6CB6716EE08691.html#0483876DD00E51CB","name":"value","decl":"constexpr auto value() const & noexcept -> const reglisse::ok::value_type &","type":0},{"sid":"7B96F159F0BF589C","name":"handle_invalid_value_result_access","decl":"inline void handle_invalid_value_result_access(bool check)","type":1},{"sid":"B2E73C383AAAD635.html#BDCDB14411A102B7","name":"some<T>","decl":"constexpr some<T>(reglisse::some::value_type && value)","type":0},{"sid":"4A6CB6716EE08691.html#43FCA003371A523A","name":"value","decl":"constexpr auto value() const && noexcept -> const reglisse::ok::value_type","type":0},{"sid":"3F0554D59193E7FE","name":"handle_invalid_error_result_access","decl":"inline void handle_invalid_error_result_access(bool check)","type":1},{"sid":"AFF5428B80EAC1D1.html#4DF13AFC316E8A28","name":"borrow_left","decl":"constexpr auto borrow_left() & noexcept -> reglisse::either::left_type &","type":0},{"sid":"0BE2AFE901D0D3BE.html#EDC7F2E9FD44355C","name":"err<T>","decl":"constexpr err<T>(const reglisse::err::value_type & value)","type":0},{"sid":"0BE2AFE901D0D3BE.html#72D0761956A7F777","name":"value","decl":"constexpr auto value() const & noexcept -> const reglisse::err::value_type &","type":0},{"sid":"AFF5428B80EAC1D1.html#84A9D78830A4E088","name":"borrow_right","decl":"constexpr auto borrow_right() & noexcept -> reglisse::either::right_type &","type":0},{"sid":"0BE2AFE901D0D3BE.html#CACF0990BAFA052C","name":"value","decl":"constexpr auto value() const && noexcept -> const reglisse::err::value_type","type":0},{"sid":"FA8E2EC3BE9245EB.html#9BE95581F74CBBD5","name":"borrow","decl":"constexpr auto borrow() const & noexcept -> const reglisse::right::value_type &","type":0},{"sid":"0BE2AFE901D0D3BE.html#CC64B8AAE82F6A81","name":"value","decl":"constexpr auto value() && noexcept -> reglisse::err::value_type","type":0},{"sid":"4A6CB6716EE08691.html#E3B3D0E4968E7A68","name":"ok<T>","decl":"constexpr ok<T>(const reglisse::ok::value_type & value)","type":0},{"sid":"AFF5428B80EAC1D1.html#3040FC1A7514FCAD","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(right<reglisse::either::right_type> && right_val)","type":0},{"sid":"4A6CB6716EE08691.html#11E2FE983A2EFC1C","name":"value","decl":"constexpr auto value() & noexcept -> reglisse::ok::value_type &","type":0},{"sid":"0BE2AFE901D0D3BE.html#68F41CD4BB58815A","name":"err<T>","decl":"constexpr err<T>(reglisse::err::value_type && value)","type":0},{"sid":"4A6CB6716EE08691.html#D72C5EB57A35E031","name":"value","decl":"constexpr auto value() && noexcept -> reglisse::ok::value_type","type":0},{"sid":"F8EBA2DD84B26B38","name":"<deduction guide for ok>","decl":"auto <deduction guide for ok>(const char *) -> ok<std::string>","type":1},{"sid":"BB13AFB20A985980.html#6B716D004238BAE5","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(ok<reglisse::result::value_type> && value)","type":0},{"sid":"BB13AFB20A985980.html#A6F7CF3D408F86BD","name":"is_err","decl":"constexpr auto is_err() const noexcept -> bool","type":0},{"sid":"BB13AFB20A985980.html#52FF0282D8FF1002","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(err<reglisse::result::error_type> && error)","type":0},{"sid":"BB13AFB20A985980.html#C95CA3C84C515DAC","name":"borrow","decl":"constexpr auto borrow() & -> reglisse::result::value_type &","type":0},{"sid":"BB13AFB20A985980.html#7607AA104378C693","name":"take","decl":"constexpr auto take() && -> reglisse::result::value_type","type":0},{"sid":"AFF5428B80EAC1D1.html#509356B92D2CB211","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(left<reglisse::either::left_type> && left_val)","type":0},{"sid":"BB13AFB20A985980.html#D8C2FF655C128784","name":"take_err","decl":"constexpr auto take_err() const && -> reglisse::result::error_type","type":0},{"sid":"AFF5428B80EAC1D1.html#F3A04B6D415A411D","name":"take_right","decl":"constexpr auto take_right() const && noexcept -> const reglisse::either::right_type","type":0},{"sid":"BB13AFB20A985980.html#E4489FF613D71E64","name":"operator bool","decl":"constexpr bool operator bool() const noexcept","type":0},{"sid":"AFF5428B80EAC1D1.html#762B4AA6DF76F194","name":"take_right","decl":"constexpr auto take_right() && noexcept -> reglisse::either::right_type","type":0},{"sid":"BB13AFB20A985980.html#4D99C21321FB1A19","name":"take_or","decl":"template <class U>constexpr auto take_or(U && other) const && -> reglisse::result::value_type","type":0},{"sid":"C9B92E868BB67730.html#095056221C3CA1E4","name":"get","decl":"constexpr auto get() const -> Type","type":0},{"sid":"4BA364BE76DDA8E2","name":"transform_right_fn","decl":"struct transform_right_fn","type":2},{"sid":"9FA2BC7BBF05E9E6","name":"transform_join_left_fn","decl":"struct transform_join_left_fn","type":2},{"sid":"CC73994260292905","name":"transform_left_fn","decl":"struct transform_left_fn","type":2},{"sid":"16CAD8B6C217FE1E","name":"transform_join_right_fn","decl":"struct transform_join_right_fn","type":2},{"sid":"7848E6D27B57DC94","name":"transform_err_fn","decl":"struct transform_err_fn","type":2},{"sid":"7501B69C4B85CC35","name":"left","decl":"template <class T> class left","type":3},{"sid":"4A6CB6716EE08691","name":"ok","decl":"template <class T> class ok","type":3},{"sid":"32EEE1E9E4AF4393","name":"and_then_fn","decl":"struct and_then_fn","type":2},{"sid":"BB13AFB20A985980","name":"result","decl":"template <class ValueType, class ErrorType> class result","type":3},{"sid":"FA8E2EC3BE9245EB","name":"right","decl":"template <class T> class right","type":3},{"sid":"5CCC61E92B5555F9","name":"pipe_closure","decl":"template <typename Func> struct pipe_closure","type":2},{"sid":"33B0A3E72B4DABF7","name":"transform_fn","decl":"struct transform_fn","type":2},{"sid":"B2E73C383AAAD635","name":"some","decl":"template <class T> class some","type":3},{"sid":"5CBE23CFDDCEF161","name":"maybe","decl":"template <typename T> class maybe","type":3},{"sid":"01C83D7E41C19035","name":"operation","decl":"template <typename OpFunctor> struct operation","type":2},{"sid":"0484BCD0DC59A433","name":"invalid_access_exception","decl":"class invalid_access_exception : public std::exception","type":3},{"sid":"AFF5428B80EAC1D1","name":"either","decl":"template <class L, class R> class either","type":3},{"sid":"7BF378E4723B0BDC","name":"none_t","decl":"struct none_t","type":2},{"sid":"6B5E256F26CAC120","name":"or_else_fn","decl":"struct or_else_fn","type":2},{"sid":"C9B92E868BB67730","name":"forwarding_wrapper","decl":"template <typename Type> struct forwarding_wrapper","type":2},{"sid":"0BE2AFE901D0D3BE","name":"err","decl":"template <class T> class err","type":3}]