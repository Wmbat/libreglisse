[{"sid":"9E762C3A06D12428.html#ABB2447068108A2C","name":"take","decl":"constexpr auto take() && noexcept -> reglisse::right::value_type","type":0},{"sid":"9E762C3A06D12428.html#EE7839E8498E49ED","name":"borrow","decl":"constexpr auto borrow() const & noexcept -> const reglisse::right::value_type &","type":0},{"sid":"56B5B9C1303377BC","name":"try_wrap","decl":"template <class ErrType, class Fun, class... Args>constexpr auto try_wrap(Fun && fun, Args &&... args) -> result<std::invoke_result_t<Fun, Args...>, ErrType>","type":1},{"sid":"0D2BC154CDCA6DCE.html#B4272F14A0018FFF","name":"is_err","decl":"constexpr auto is_err() const noexcept -> bool","type":0},{"sid":"0D2BC154CDCA6DCE.html#CAE38EFB4ACB151E","name":"operator bool","decl":"constexpr bool operator bool() const noexcept","type":0},{"sid":"0D2BC154CDCA6DCE.html#CCEBB9EDAED39EE1","name":"take_err_or","decl":"template <class U>constexpr auto take_err_or(U && other) && -> reglisse::result::error_type","type":0},{"sid":"0C088CA710A213E1.html#F93A0D8B3A6862F4","name":"take_or","decl":"template <class U>constexpr auto take_or(U && or_val) && -> reglisse::maybe::value_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#45168B830C236F6D","name":"take_err_or","decl":"template <class U>constexpr auto take_err_or(U && other) const && -> reglisse::result::error_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#630EB826B4882148","name":"take_err","decl":"constexpr auto take_err() && -> reglisse::result::error_type","type":0},{"sid":"E65865FA609A2F26.html#B4454063232A3E33","name":"some<T>","decl":"constexpr some<T>(const reglisse::some::value_type & value)","type":0},{"sid":"39A71CC94AEEC8F5","name":"handle_invalid_right_either_access","decl":"inline void handle_invalid_right_either_access(bool check)","type":1},{"sid":"3C3A775280217412.html#0CBD262B2BDD8FE1","name":"take_left","decl":"constexpr auto take_left() const && noexcept -> const reglisse::either::left_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#2E56CAEE937E36B8","name":"borrow_err","decl":"constexpr auto borrow_err() & -> reglisse::result::error_type &","type":0},{"sid":"0D2BC154CDCA6DCE.html#1717EC0BE57D7700","name":"borrow_err","decl":"constexpr auto borrow_err() const & -> const reglisse::result::error_type &","type":0},{"sid":"0D2BC154CDCA6DCE.html#D1E3085B42A3E161","name":"take_err","decl":"constexpr auto take_err() const && -> reglisse::result::error_type","type":0},{"sid":"4F0A648C59C2329B","name":"<deduction guide for some>","decl":"auto <deduction guide for some>(const char *) -> some<std::string>","type":1},{"sid":"9E762C3A06D12428.html#9A5F92A03FE8649D","name":"right<T>","decl":"constexpr right<T>(const reglisse::right::value_type & value)","type":0},{"sid":"CA4A8388248DFCF9.html#677928102AA18877","name":"value","decl":"constexpr auto value() const & noexcept -> const reglisse::ok::value_type &","type":0},{"sid":"E65865FA609A2F26.html#C3962E8DB01612AB","name":"take","decl":"constexpr auto take() && noexcept -> reglisse::some::value_type","type":0},{"sid":"DEA9A930C95AF56D.html#1477C4C3CC317444","name":"value","decl":"constexpr auto value() && noexcept -> reglisse::err::value_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#59D5F4F68A28F6DB","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(result<ValueType, ErrorType> && other) noexcept","type":0},{"sid":"0C088CA710A213E1.html#92ADC9BD261AA3A1","name":"maybe<T>","decl":"constexpr maybe<T>(const maybe<T> & other)","type":0},{"sid":"0D2BC154CDCA6DCE.html#657CE481E647034C","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>()","type":0},{"sid":"0C088CA710A213E1.html#B190F34D355CF039","name":"borrow","decl":"constexpr auto borrow() & -> reglisse::maybe::value_type &","type":0},{"sid":"0D2BC154CDCA6DCE.html#2A85688B3D690BF8","name":"take_or","decl":"template <class U>constexpr auto take_or(U && other) const && -> reglisse::result::value_type","type":0},{"sid":"CA232B40DB010B6B.html#57F1C39969CA8067","name":"borrow","decl":"constexpr auto borrow() & noexcept -> reglisse::left::value_type &","type":0},{"sid":"0C088CA710A213E1.html#D968D832A5364C9A","name":"maybe<T>","decl":"constexpr maybe<T>() noexcept","type":0},{"sid":"DEA9A930C95AF56D.html#D1A8260FB63659E5","name":"value","decl":"constexpr auto value() const & noexcept -> const reglisse::err::value_type &","type":0},{"sid":"65AEAC9A008310C4","name":"<deduction guide for err>","decl":"auto <deduction guide for err>(const char *) -> err<std::string>","type":1},{"sid":"E65865FA609A2F26.html#DE4CC491AAFE386C","name":"borrow","decl":"constexpr auto borrow() const & noexcept -> const reglisse::some::value_type &","type":0},{"sid":"0D2BC154CDCA6DCE.html#53159EEADC66DD5D","name":"borrow","decl":"constexpr auto borrow() const & -> const reglisse::result::value_type &","type":0},{"sid":"DEA9A930C95AF56D.html#061271BD0C2E33A7","name":"err<T>","decl":"constexpr err<T>(const reglisse::err::value_type & value)","type":0},{"sid":"BD12914A93FF8776","name":"<deduction guide for left>","decl":"auto <deduction guide for left>(const char *) -> left<std::string>","type":1},{"sid":"0D2BC154CDCA6DCE.html#0BCD30C3D5165B2F","name":"borrow","decl":"constexpr auto borrow() & -> reglisse::result::value_type &","type":0},{"sid":"E65865FA609A2F26.html#C6E3992E03486A45","name":"borrow","decl":"constexpr auto borrow() & noexcept -> reglisse::some::value_type &","type":0},{"sid":"84689F06BA7441A9","name":"make_pipe_closure","decl":"template <typename Func>constexpr auto make_pipe_closure(Func func)","type":1},{"sid":"9E762C3A06D12428.html#7B2412D2641E88D3","name":"borrow","decl":"constexpr auto borrow() & noexcept -> reglisse::right::value_type &","type":0},{"sid":"A8EBF08ED85B2C3A","name":"handle_invalid_error_result_access","decl":"inline void handle_invalid_error_result_access(bool check)","type":1},{"sid":"0C088CA710A213E1.html#45B6F0C6C902333B","name":"swap","decl":"constexpr void swap(maybe<T> & other)","type":0},{"sid":"CA4A8388248DFCF9.html#A6C1A9B70CF50D68","name":"ok<T>","decl":"constexpr ok<T>(const reglisse::ok::value_type & value)","type":0},{"sid":"9B6305D6EE0A0EEA","name":"make_forwarding_wrapper","decl":"template <typename Type>constexpr auto make_forwarding_wrapper(Type && val)","type":1},{"sid":"DEA9A930C95AF56D.html#81E85EB3C6286F83","name":"err<T>","decl":"constexpr err<T>(reglisse::err::value_type && value)","type":0},{"sid":"CA232B40DB010B6B.html#6771535F46C3B756","name":"take","decl":"constexpr auto take() && noexcept -> reglisse::left::value_type","type":0},{"sid":"DEA9A930C95AF56D.html#00CDBDDC0FBC3435","name":"value","decl":"constexpr auto value() const && noexcept -> const reglisse::err::value_type","type":0},{"sid":"3C3A775280217412.html#F57083910EBCF33C","name":"take_right","decl":"constexpr auto take_right() && noexcept -> reglisse::either::right_type","type":0},{"sid":"E65865FA609A2F26.html#3F610FA658BE10B3","name":"take","decl":"constexpr auto take() const && noexcept -> const reglisse::some::value_type","type":0},{"sid":"9E762C3A06D12428.html#73A6742E344756DB","name":"take","decl":"constexpr auto take() const && noexcept -> const reglisse::right::value_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#14A6BF77785092BE","name":"~result<ValueType, ErrorType>","decl":"constexpr ~result<ValueType, ErrorType>()","type":0},{"sid":"FF7548B7FCC0475B.html#C075A454B381354F","name":"invalid_access_exception","decl":"invalid_access_exception(std::string msg)","type":0},{"sid":"3F046AC842599BA4","name":"<deduction guide for ok>","decl":"auto <deduction guide for ok>(const char *) -> ok<std::string>","type":1},{"sid":"CA232B40DB010B6B.html#E4674EE7F4D32A72","name":"left<T>","decl":"constexpr left<T>(reglisse::left::value_type && value)","type":0},{"sid":"FAE764878822C328.html#BF69469D3F630268","name":"get","decl":"constexpr auto get() const -> Type","type":0},{"sid":"CA4A8388248DFCF9.html#649582C7B673FEB9","name":"value","decl":"constexpr auto value() const && noexcept -> const reglisse::ok::value_type","type":0},{"sid":"CA232B40DB010B6B.html#65EBA13184888D1B","name":"left<T>","decl":"constexpr left<T>(const reglisse::left::value_type & value)","type":0},{"sid":"CA4A8388248DFCF9.html#872255A6CC60CD68","name":"ok<T>","decl":"constexpr ok<T>(reglisse::ok::value_type && value)","type":0},{"sid":"9E762C3A06D12428.html#61498809966CCA09","name":"right<T>","decl":"constexpr right<T>(reglisse::right::value_type && value)","type":0},{"sid":"0D2BC154CDCA6DCE.html#8A6CAF33B0AF62F1","name":"take","decl":"constexpr auto take() && -> reglisse::result::value_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#2B8F8609DB6360C9","name":"is_ok","decl":"constexpr auto is_ok() const noexcept -> bool","type":0},{"sid":"0D2BC154CDCA6DCE.html#A365A126BC3E7560","name":"take_or","decl":"template <class U>constexpr auto take_or(U && other) && -> reglisse::result::value_type","type":0},{"sid":"3C3A775280217412.html#CFD0DD29F796364C","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(right<reglisse::either::right_type> && right_val)","type":0},{"sid":"DEA9A930C95AF56D.html#948E1ED178B98CA2","name":"value","decl":"constexpr auto value() & noexcept -> reglisse::err::value_type &","type":0},{"sid":"33ADBB009CA65092","name":"<deduction guide for right>","decl":"auto <deduction guide for right>(const char *) -> right<std::string>","type":1},{"sid":"3C3A775280217412.html#1CDC1B3483FC01C1","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(const either<LeftType, RightType> & other)","type":0},{"sid":"3C3A775280217412.html#BA36B8CDF1B3D80A","name":"borrow_right","decl":"constexpr auto borrow_right() & noexcept -> reglisse::either::right_type &","type":0},{"sid":"0C088CA710A213E1.html#2C800DED15413BEF","name":"reset","decl":"constexpr void reset()","type":0},{"sid":"CA4A8388248DFCF9.html#2B161D590902176B","name":"value","decl":"constexpr auto value() && noexcept -> reglisse::ok::value_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#C11EE3C94A814942","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(err<reglisse::result::error_type> && error)","type":0},{"sid":"3C3A775280217412.html#1E49183870594484","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>()","type":0},{"sid":"FF7548B7FCC0475B.html#144F61883E33CA0E","name":"what","decl":"auto what() const noexcept -> const char *","type":0},{"sid":"3C3A775280217412.html#345EB803DB80CE4E","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(left<reglisse::either::left_type> && left_val)","type":0},{"sid":"0C088CA710A213E1.html#C508F86E2B335D3F","name":"take","decl":"constexpr auto take() && -> reglisse::maybe::value_type","type":0},{"sid":"3C3A775280217412.html#E620647F6F3D62B9","name":"either<LeftType, RightType>","decl":"constexpr either<LeftType, RightType>(either<LeftType, RightType> && other) noexcept","type":0},{"sid":"3C3A775280217412.html#0B4B6118D8A6483C","name":"~either<LeftType, RightType>","decl":"constexpr ~either<LeftType, RightType>()","type":0},{"sid":"0C088CA710A213E1.html#7B19A55ABC1B7366","name":"~maybe<T>","decl":"constexpr ~maybe<T>()","type":0},{"sid":"C1A478BFD27FD758","name":"handle_invalid_left_either_access","decl":"inline void handle_invalid_left_either_access(bool check)","type":1},{"sid":"0D2BC154CDCA6DCE.html#D5B42D1CCFA2580F","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(ok<reglisse::result::value_type> && value)","type":0},{"sid":"3C3A775280217412.html#B5344ABCAAB20767","name":"borrow_left","decl":"constexpr auto borrow_left() const & noexcept -> const reglisse::either::left_type &","type":0},{"sid":"3C3A775280217412.html#505CE2BD49F506A1","name":"borrow_left","decl":"constexpr auto borrow_left() & noexcept -> reglisse::either::left_type &","type":0},{"sid":"CA232B40DB010B6B.html#51A44C13E1A40AD3","name":"take","decl":"constexpr auto take() const && noexcept -> const reglisse::left::value_type","type":0},{"sid":"3C3A775280217412.html#01B5CEC40737733F","name":"take_left","decl":"constexpr auto take_left() && noexcept -> reglisse::either::left_type","type":0},{"sid":"3C3A775280217412.html#8ECE8BF79D81E8B9","name":"take_right","decl":"constexpr auto take_right() const && noexcept -> const reglisse::either::right_type","type":0},{"sid":"3C3A775280217412.html#7A4B550EF2A913BA","name":"is_left","decl":"constexpr auto is_left() const noexcept -> bool","type":0},{"sid":"CA4A8388248DFCF9.html#7519FCCAC868469B","name":"value","decl":"constexpr auto value() & noexcept -> reglisse::ok::value_type &","type":0},{"sid":"3C3A775280217412.html#D15E48C4E387CF89","name":"is_right","decl":"constexpr auto is_right() const noexcept -> bool","type":0},{"sid":"FAE764878822C328.html#C7B32EE66DE717D1","name":"forwarding_wrapper<Type>","decl":"template <class U>constexpr forwarding_wrapper<Type>(U && val)","type":0},{"sid":"0C088CA710A213E1.html#B0759541B56321AE","name":"is_none","decl":"constexpr auto is_none() const noexcept -> bool","type":0},{"sid":"70052458063227D3.html#55DFF1D120B7C7F2","name":"pipe_closure<Func>","decl":"template <typename... Types>constexpr pipe_closure<Func>(Types &&... values)","type":0},{"sid":"CA232B40DB010B6B.html#37C9AA537E6B0A2A","name":"borrow","decl":"constexpr auto borrow() const & noexcept -> const reglisse::left::value_type &","type":0},{"sid":"0D2BC154CDCA6DCE.html#9D38419005E40ACF","name":"take","decl":"constexpr auto take() const && -> reglisse::result::value_type","type":0},{"sid":"0D2BC154CDCA6DCE.html#67EBF113C55064BF","name":"result<ValueType, ErrorType>","decl":"constexpr result<ValueType, ErrorType>(const result<ValueType, ErrorType> & other)","type":0},{"sid":"317BC95F982CCDE5","name":"handle_invalid_maybe_access","decl":"inline void handle_invalid_maybe_access(bool check)","type":1},{"sid":"E65865FA609A2F26.html#35454FAA7E174426","name":"some<T>","decl":"constexpr some<T>(reglisse::some::value_type && value)","type":0},{"sid":"0C088CA710A213E1.html#1A8A0B44F6AB372D","name":"maybe<T>","decl":"constexpr maybe<T>(reglisse::none_t) noexcept","type":0},{"sid":"0C088CA710A213E1.html#141A07A4BE1FF0EA","name":"maybe<T>","decl":"constexpr maybe<T>(some<T> && val)","type":0},{"sid":"43E06AA6697D400A","name":"handle_invalid_value_result_access","decl":"inline void handle_invalid_value_result_access(bool check)","type":1},{"sid":"0C088CA710A213E1.html#40BFB58B178D4531","name":"maybe<T>","decl":"constexpr maybe<T>(maybe<T> && other) noexcept","type":0},{"sid":"0C088CA710A213E1.html#C5624DA3CBEF0F05","name":"borrow","decl":"constexpr auto borrow() const & -> const reglisse::maybe::value_type &","type":0},{"sid":"0C088CA710A213E1.html#B8CF18AFD54FAABE","name":"take","decl":"constexpr auto take() const && -> reglisse::maybe::value_type","type":0},{"sid":"0C088CA710A213E1.html#C02EDA942F3F7335","name":"take_or","decl":"template <class U>constexpr auto take_or(U && or_val) const && -> reglisse::maybe::value_type","type":0},{"sid":"0C088CA710A213E1.html#77674D282C18DA8B","name":"is_some","decl":"constexpr auto is_some() const noexcept -> bool","type":0},{"sid":"0C088CA710A213E1.html#3A743F58B9A6475A","name":"operator bool","decl":"constexpr bool operator bool() const noexcept","type":0},{"sid":"3C3A775280217412.html#B62C6D429EC07155","name":"borrow_right","decl":"constexpr auto borrow_right() const & noexcept -> const reglisse::either::right_type &","type":0},{"sid":"CFC5FA3CA80FF38D","name":"transform_right_fn","decl":"struct transform_right_fn","type":2},{"sid":"B729A21975D92F90","name":"transform_left_fn","decl":"struct transform_left_fn","type":2},{"sid":"56EB473FA9FCE781","name":"or_else_fn","decl":"struct or_else_fn","type":2},{"sid":"2DC938747C946F40","name":"transform_err_fn","decl":"struct transform_err_fn","type":2},{"sid":"7AB24BFBFE24EC16","name":"and_then_fn","decl":"struct and_then_fn","type":2},{"sid":"CA232B40DB010B6B","name":"left","decl":"template <class T> class left","type":3},{"sid":"DEA9A930C95AF56D","name":"err","decl":"template <class T> class err","type":3},{"sid":"CA4A8388248DFCF9","name":"ok","decl":"template <class T> class ok","type":3},{"sid":"13271C1076A35EB6","name":"transform_join_left_fn","decl":"struct transform_join_left_fn","type":2},{"sid":"FF7548B7FCC0475B","name":"invalid_access_exception","decl":"class invalid_access_exception : public std::exception","type":3},{"sid":"9E762C3A06D12428","name":"right","decl":"template <class T> class right","type":3},{"sid":"3C3A775280217412","name":"either","decl":"template <class L, class R> class either","type":3},{"sid":"477073C74F11C560","name":"transform_fn","decl":"struct transform_fn","type":2},{"sid":"0D2BC154CDCA6DCE","name":"result","decl":"template <class ValueType, class ErrorType> class result","type":3},{"sid":"FAE764878822C328","name":"forwarding_wrapper","decl":"template <typename Type> struct forwarding_wrapper","type":2},{"sid":"E65865FA609A2F26","name":"some","decl":"template <class T> class some","type":3},{"sid":"D9035D7B761F922F","name":"operation","decl":"template <typename OpFunctor> struct operation","type":2},{"sid":"D98B442D91FDD0C2","name":"transform_join_right_fn","decl":"struct transform_join_right_fn","type":2},{"sid":"E6F877359098997E","name":"none_t","decl":"struct none_t","type":2},{"sid":"70052458063227D3","name":"pipe_closure","decl":"template <typename Func> struct pipe_closure","type":2},{"sid":"0C088CA710A213E1","name":"maybe","decl":"template <typename T> class maybe","type":3}]